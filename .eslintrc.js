module.exports = {
  extends: [
    "next/core-web-vitals",
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    // "plugin:@typescript-eslint/recommended",
    "plugin:tailwindcss/recommended",
    // "airbnb-typescript",
  ],
  plugins: [
    "eslint-plugin-import",
    "eslint-plugin-import-helpers",
    "prettier",
    "simple-import-sort",
    "import",
    "tailwindcss",
    "@typescript-eslint",
  ],
  // parser: "@typescript-eslint/parser",
  rules: {
    "simple-import-sort/imports": "warn",
    "no-restricted-imports": [
      "error",
      {
        paths: [
          {
            name: "rxjs/Rx",
            message: "Please import directly from 'rxjs' instead",
          },
        ],
      },
    ],
    "no-restricted-syntax": [
      "warn",
      {
        selector:
          "CallExpression[callee.object.name='console'][callee.property.name=/^(debug|log|time|timeEnd|trace)$/]",
        message: "Unexpected property on console object was called",
      },
    ],
    "object-curly-spacing": ["error", "always"],
    "no-multi-spaces": ["error"],
    "arrow-body-style": "off",
    complexity: ["warn", 20],
    "constructor-super": "error",
    curly: "error",
    "dot-notation": "error",
    "eol-last": "error",
    eqeqeq: ["error", "smart"],
    "guard-for-in": "error",
    "id-match": "error",
    "import/no-default-export": "off",
    "import/no-deprecated": "warn",
    "import/no-internal-modules": "off",
    "import/order": "off",
    "max-classes-per-file": ["error", 1],
    "new-parens": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-debugger": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-empty": "warn",
    "no-eval": "error",
    "no-extra-bind": "error",
    "no-fallthrough": "error",
    "no-invalid-this": "error",
    "no-irregular-whitespace": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        max: 1,
      },
    ],
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-redeclare": "error",
    "no-return-await": "error",
    "no-sequences": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": ["off"],
    "no-shadow": [
      "error",
      {
        hoist: "all",
      },
    ],
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-expressions": "error",
    "no-unused-labels": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-const": "error",
    "prefer-object-spread": "error",
    "quote-props": ["error", "as-needed"],
    radix: "error",
    "use-isnan": "error",
    "valid-typeof": "off",
    // 'import-helpers/order-imports': [
    //   'warn',
    //   {
    //     newlinesBetween: 'always',
    //     groups: ['module', '/^@shared/', ['index', 'sibling', 'parent']],
    //     alphabetize: {
    //       order: 'asc',
    //       ignoreCase: true,
    //     },
    //   },
    // ],
    "import/newline-after-import": [
      "error",
      {
        count: 1,
      },
    ],
    "no-continue": "off",
    "no-promise-executor-return": "off",
    "consistent-return": "off",
    "no-plusplus": "off",
    "no-await-in-loop": "off",
    "prettier/prettier": "off",
    "no-unused-vars": 0,
    "no-param-reassign": "off",
    "import/prefer-default-export": "off",
    // "@typescript-eslint/quotes": "off",
    // "@typescript-eslint/indent": "off",
    "linebreak-style": "off",
    "default-case": "off",
    "implicit-arrow-linebreak": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-named-as-default": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn", // or "error"
      {
        argsIgnorePattern: "^_",
        varsIgnorePattern: "^_",
        caughtErrorsIgnorePattern: "^_",
      },
    ],
    "tailwindcss/no-custom-classname": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        js: "never",
        jsx: "never",
        ts: "never",
        tsx: "never",
      },
    ],
    "no-shadow": 0,
    "@typescript-eslint/no-shadow": [1],

    //will show error
    "no-underscore-dangle": "warn",
    "prefer-regex-literals": "warn",
    // "no-shadow": "warn",
    "no-unsafe-optional-chaining": "warn",
    radix: "warn",
    camelcase: 1,
    "no-unused-expressions": "warn",
    "no-nested-ternary": "warn",
    "react/no-unescaped-entities": "warn",
    "no-prototype-builtins": "warn",
    // "import/extensions": "off",
    // "import/no-unresolved": "off",
  },
  parserOptions: {
    ecmaVersion: "latest",
    sourceType: "module",
    ecmaFeatures: {
      jsx: true,
    },
    // project: ["./tsconfig.json"],
  },
  env: {
    browser: true,
    es2021: true,
  },
  globals: {
    window: true,
    document: true,
    localStorage: true,
    fetch: true,
  },
  settings: {
    "import/resolver": {
      typescript: {},
    },
    tailwindcss: {
      // These are the default values but feel free to customize
      callees: ["classnames", "clsx", "ctl", "className"],
      config: "tailwind.config.js",
      cssFiles: [
        "**/*.css",
        "!**/node_modules",
        "!**/.*",
        "!**/dist",
        "!**/build",
      ],
      cssFilesRefreshRate: 5_000,
      removeDuplicates: true,
      whitelist: [],
    },
  },
};
